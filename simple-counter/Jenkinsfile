pipeline {
    agent any

    stages {
        stage('Build') {  /* Build Stage */
            steps {
                script {
                    // Navigate to the simple-counter directory
                    dir('simple-counter') {
                        bat 'npm install'    // Run npm install from within the simple-counter directory
                        bat 'npm run build'  // Build the React app
                        bat 'npm install netlify-cli -g'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    dir('simple-counter'){
                        bat 'npm run test' // Run tests using Jest
                    }
                }
            }
        }

        stage('Code Quality Analysis') {
            steps {
                script {
                    dir('simple-counter') {
                        bat 'npm run lint'
                    }
                }
            }
        }

        stage('Deploy to Test Environment') {
            steps {
                bat 'xcopy /s /y .\\simple-counter\\build\\* C:\\Apache24\\htdocs\\'
            }
        }

        stage('Release to Production') {
            steps {
                script {
                    dir('simple-counter') {
                        // Use credentials securely
                        withCredentials([string(credentialsId: 'sit753-assignment-token', variable: 'NETLIFY_AUTH_TOKEN')]) {
                            def response = bat(script: '''
                            curl -X POST \
                            -H "Content-Type: application/zip" \
                            -H "Authorization: Bearer ${NETLIFY_AUTH_TOKEN}" \
                            --data-binary @build.zip \
                            "https://api.netlify.com/api/v1/sites/56890d9a-013a-4b8f-86b6-be13c10c5b1a/deploys"
                            ''', returnStdout: true)
                            echo "Netlify deployment response: ${response}"
                        }
                    }
                }
            }
        }

        stage('Run e2e tests') {
           steps {
                withCredentials([string(credentialsId: 'datadog-api-key', variable: 'DATADOG_API_KEY'), string(credentialsId: 'datadog-app-key', variable: 'DATADOG_APP_KEY')]) {
                //    nodejs(nodeJSInstallationName: 'Node 20.12.2') {
                       configFileProvider(
                           [configFile(fileId: 'config-file-id', variable: 'DATADOG_CI_CONFIG')]) {
                           bat 'datadog-ci synthetics run-tests -s "tag:e2e" --config $DATADOG_CI_CONFIG'
                       }
                }
                // }
           }
        }

    }
}
